buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "Snapshot repo"
            url = "https://oss.sonatype.org/service/local/repositories/iogitlabhohserg-1051/content/"
        }
        maven { url 'https://plugins.gradle.org/m2/'}
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = "1.0"
group = project.group // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CurrentMagic"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version:'20171003-1.12'

    accessTransformer = file('src/main/resources/META-INF/current-magic_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    implementation fg.deobf("io.gitlab.hohserg.elegant.networking:elegant-networking-1.12:3.14")
    compileOnly "io.gitlab.hohserg.elegant.networking:annotation-processor:3.14"
    annotationProcessor "io.gitlab.hohserg.elegant.networking:annotation-processor:3.14"

    compileOnly 'org.projectlombok:lombok:1.18.10'
}

jar {
    manifest {
        attributes([
                "Implementation-Title"       : project.name,
                "Implementation-Version"     : project.version,
                "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

idea {
    module {
        inheritOutputDirs = true
    }
}

task prepareAssets(type: Copy) {
    group = 'build'
    from project.file('src/main/resources')
    into project.file('build/classes/java/main')

}
sourceSets {
    main { output.resourcesDir = sourceSets.main.java.outputDir }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft.mappingVersion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion': minecraft.mappingVersion
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

